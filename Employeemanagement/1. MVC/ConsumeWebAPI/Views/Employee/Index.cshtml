@* @model IEnumerable<ConsumeWebAPI.Models.EmployeeViewModel> *@

@model ConsumeWebAPI.Models.PagingList<ConsumeWebAPI.Models.EmployeeViewModel>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<p>
    <a asp-action="Create">Create New</a>
</p>
@using (Html.BeginForm("Index", "Employee", FormMethod.Get))
{
    <span style="color:blue">From Date:</span>
    <input type="date" name="From" />
    <span style="color:blue">To Date:</span>
    <input type="date" name="To" /> <span> </span> <span> </span>
    <span> </span> <span> </span> <span> </span> <span> </span>
    <span style="color:blue">Name:</span>
    <input type="text" name="name" placeholder="Enter Name" /> <span> </span>
    <span> </span>
    <span> </span>
    <span> </span>
    <span> </span>
    <span> </span>
   @*  <span style="color:blue">Select Designation:</span> *@

    @* @Html.DropDownList("GenderId", new List<SelectListItem>{
new SelectListItem{ Text="Select Gender", Value = "0" },
new SelectListItem{ Text="Male", Value = "1" },
new SelectListItem{ Text="Female", Value = "2" },
new SelectListItem{ Text="Transgender", Value = "3" },
}) *@
    <input type="submit" name="submit" value="Search" class="button button4" />
}
<table class="table">
    <thead>
         <tr>
            <th style="width:20%;">
                @Html.ActionLink("First Name", "Index", new { sortField = "FirstName", currentSortField = ViewBag.SortField, currentSortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter,  })
            </th>
            <th style="width:10%;">
                @Html.ActionLink("Last Name", "Index", new { sortField = "LastName", currentSortField = ViewBag.SortField, currentSortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th style="width:10%;">
                @Html.ActionLink("Department", "Index", new { sortField = "DepartmentName", currentSortField = ViewBag.SortField, currentSortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th style="width:10%;">
                @Html.ActionLink("Designation", "Index", new { sortField = "DesignationName", currentSortField = ViewBag.SortField, currentSortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th style="width:10%;">
                @Html.ActionLink("Knowledge", "Index", new { sortField = "KnowledgeName", currentSortField = ViewBag.SortField, currentSortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th style="width:10%;">
                @Html.ActionLink("Join Date", "Index", new { sortField = "JoiningDate]", currentSortField = ViewBag.SortField, currentSortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th style="width:10%;">
                @Html.ActionLink("Salary", "Index", new { sortField = "Salary", currentSortField = ViewBag.SortField, currentSortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th style="width:10%;">
                @Html.ActionLink("Reporting Person", "Index", new { sortField = "ReportingPerson", currentSortField = ViewBag.SortField, currentSortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th style="width:10%;"></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DepartmentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DesignationName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.KnowledgeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JoiningDate)
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Salary)
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReportingPerson)
            </td>
            <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.EmployeeId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.EmployeeId })
            </td>
        </tr>
}
    </tbody>
</table>
<br />

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var totalPageNo = Model.TotalPageNo;
    var currentPageNo = Model.PageIndex;
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNo="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNo="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
<span>
    Page No : @currentPageNo of @totalPageNo
</span>
